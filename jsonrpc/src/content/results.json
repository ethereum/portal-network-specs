{
  "AddEnrResult": {
    "name": "addEnrResult",
    "description": "Returns boolean if the node record has been successfully saved.",
    "schema": {
      "type": "boolean"
    }
  },
  "StoreResult": {
    "name": "storeResult",
    "description": "Returns \"true\" upon success",
    "schema": {
      "type": "boolean"
    }
  },
  "DeleteEnrResult": {
    "name": "deleteEnrResult",
    "description": "Returns boolean upon successful deletion of the node record.",
    "schema": {
      "type": "boolean"
    }
  },
  "FindContentResult": {
    "name": "FindContentResult",
    "description": "Returns either the requested content, received directly from the CONTENT message or transferred over uTP, or, in case the recipient does not have the content, a list of ENR records of nodes that are closer than the recipient is to the requested content.",
    "schema": {
      "title": "FindContentResult",
      "type": "object",
      "oneOf" :[
        {
          "title": "ContentInfo",
          "type": "object",
          "required": [
            "content",
            "utpTransfer"
          ],
          "properties": {
            "content": {
              "title": "Requested content",
              "description": "Encoded requested content",
              "$ref": "#/components/schemas/hexString"
            },
            "utpTransfer": {
              "description": "Indicates whether the content was transferred over a uTP connection or not.",
              "type": "boolean"
            }
          }
        },
        {
          "title": "ENRs",
          "description": "List of ENR records of nodes that are closer than the recipient is to the requested content",
          "type": "object",
          "required": ["enrs"],
          "properties": {
            "enrs": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Enr"
              }
            }
          }
        }
      ]
    }
  },
  "FindNodeResult": {
    "name": "findNodeResult",
    "description": "Returns nodes in a given distance",
    "schema": {
      "title": "NODES message",
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Enr"
      }
    }
  },
  "GetEnrResult": {
    "name": "getEnrResult",
    "description": "Returns latest ENR associated with the given node ID.",
    "schema": {
      "title": "Ethereum node record",
      "$ref": "#/components/schemas/Enr"
    }
  },
  "LookupEnrResult": {
    "name": "lookupEnrResult",
    "description": "Returns ENR associated with the given node ID",
    "schema": {
      "title": "Ethereum node record",
      "$ref": "#/components/schemas/Enr"
    }
  },
  "OfferResult": {
    "name": "offerResult",
    "description": "Returns the content keys bitlist upon successful content transmission or empty bitlist receival",
    "schema": {
      "title": "Encoded content keys bitlist",
      "$ref": "#/components/schemas/hexString"
    }
  },
  "PingResult": {
    "name": "pingResult",
    "description": "Returns PONG response",
    "schema": {
      "title": "PONG message",
      "type": "object",
      "required": [
        "enrSeq",
        "dataRadius"
      ],
      "properties": {
        "enrSeq": {
          "description": "ENR sequence number of sender",
          "type": "number"
        },
        "dataRadius": {
          "description": "Data radius value",
          "$ref": "#/components/schemas/DataRadius"
        }
      }
    }
  },
  "RecursiveFindNodesResult": {
    "name": "recursiveFindNodesResult",
    "description": "Up to 16 ENRs of the closest nodes, sorted by distance.",
    "schema": {
      "type": "array",
      "items": {
        "$ref": "#/components/schemas/Enr"
      }
    }
  },
  "RoutingTableInfoResult": {
    "name": "routingTableInfoResult",
    "description": "history network routing table information",
    "required": true,
    "schema": {
      "title": "routingTableInfoResults",
      "description": "Routing table details",
      "type": "object",
      "required": [
        "localNodeId",
        "buckets"
      ],
      "properties": {
        "localNodeId": {
          "title": "nodeId",
          "description": "The key identifying the local peer that owns the routing table.",
          "$ref": "#/components/schemas/bytes32"
        },
        "buckets": {
          "title": "kBucketsTable",
          "description": "Represents a Kademlia routing table.",
          "$ref": "#/components/schemas/kBuckets"
        }
      }
    }
  },
  "RecursiveFindContentResult": {
    "name": "RecursiveFindContentResult",
    "description": "Returns the hex encoded content value and utp transfer flag, if it was found.",
    "schema": {
      "type": "object",
      "required": [
        "content",
        "utpTransfer"
      ],
      "properties": {
        "content": {
          "description": "Hex encoded content value",
          "$ref": "#/components/schemas/hexString"
        },
        "utpTransfer": {
          "description": "Indicates whether the content was transferred over a uTP connection or not.",
          "type": "boolean"
        }
      }
    }
  },
  "TraceRecursiveFindContentResult": {
    "name": "TraceRecursiveFindContentResult",
    "description": "Returns the hex encoded content value and trace data object, if it was found.",
    "schema": {
      "type": "object",
      "required": [
        "content",
        "utpTransfer",
        "trace"
      ],
      "properties": {
        "content": {
          "description": "Hex encoded content value",
          "$ref": "#/components/schemas/hexString"
        },
        "utpTransfer": {
          "description": "Indicates whether the content was transferred over a uTP connection or not.",
          "type": "boolean"
        },
        "trace": {
          "description": "Contains trace data for the request.",
          "$ref": "#/components/schemas/traceResultObject"
        }
      }
    }
  },
  "LocalContentResult": {
    "name": "LocalContentResult",
    "description": "Returns the hex encoded content value, if it was found.",
    "schema": {
      "$ref": "#/components/schemas/hexString"
    }
  },
  "GossipResult": {
    "name": "gossipResult",
    "description": "Returns the number of peers that the content was gossiped to",
    "schema": {
      "title": "number of peers",
      "type": "number"
    }
  }
}
