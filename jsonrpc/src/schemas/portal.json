{
  "kBucket": {
    "title": "kBucket info",
    "description": "List of up to 16 hex encoded nodeIds, ordered from least-recently connected to most-recently connected.",
    "type": "array",
    "items": {
      "$ref": "#/components/schemas/bytes32"
    }
  },
  "kBuckets": {
    "title": "kBuckets",
    "description": "The buckets comprising the routing table.",
    "type": "array",
    "items": {
      "$ref": "#/components/schemas/kBucket"
    }
  },
  "DataRadius": {
    "title": "Data radius as a hex encoded uint256",
    "$ref": "#/components/schemas/uint256"
  },
  "Enr": {
    "title": "Base64 encoded ENR",
    "type": "string",
    "pattern": "^enr:[a-zA-Z0-9_:-]{179}$"
  },
  "ipAddr": {
    "title": "IP v4/v6 address",
    "type": "string",
    "pattern": "((^\\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\\s*$)|(^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$))"
  },
  "socketAddr": {
    "title": "ENR socket address",
    "type": "string",
    "pattern": "/([0-9]{1,3}(?:\\.[0-9]{1,3}){3}|(?=[^\\/]{1,254}(?![^\\/]))(?:(?=[a-zA-Z0-9-]{1,63}\\.)(?:xn--+)?[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*\\.)+[a-zA-Z]{2,63}):([0-9]{1,5})$"
  },
  "udpPort": {
    "title": "UDP port number",
    "type": "string",
    "pattern": "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
  },
  "ContentItem": {
    "title": "content_item",
    "type": "array",
    "items": [
      {
        "title": "Content key",
        "description": "The encoded Portal content key",
        "$ref": "#/components/schemas/hexString"
      },
      {
        "title": "Content value",
        "description": "The encoded Portal content value",
        "$ref": "#/components/schemas/hexString"
      }
    ],
    "minItems": 2,
    "maxItems": 2,
    "additionalItems": false
  },
  "ClientInfoAndCapabilities": {
    "title": "ClientInfoAndCapabilities",
    "type": "object",
    "properties": {
      "clientInfo": {
        "type": "string",
        "description": "UTF-8 hex encoded client information"
      },
      "dataRadius": {
        "type": "string",
        "description": "U256 representing data radius"
      },
      "capabilities": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "List of u16 values representing enabled extensions"
      }
    },
    "additionalProperties": false
  },
  "BasicRadius": {
    "title": "BasicRadius",
    "type": "object",
    "properties": {
      "dataRadius": {
        "type": "string",
        "description": "U256 representing data radius"
      }
    },
    "additionalProperties": false
  },
  "HistoryRadius": {
    "title": "HistoryRadius",
    "type": "object",
    "properties": {
      "dataRadius": {
        "type": "string",
        "description": "U256 representing data radius"
      },
      "ephemeralHeaderCount": {
        "type": "number",
        "description": "U16 representing number of ephemeral headers held"
      }
    },
    "additionalProperties": false
  },
  "UnknownPayload": {
    "title": "UnknownPayload",
    "description": "A placeholder for unknown or future payload types",
    "type": "object",
    "additionalProperties": true
  },
  "AcceptMetadata": {
    "name": "AcceptMetadata",
    "description": "Metadata containing counts of each accept code received from peers when offering content.",
    "schema": {
      "type": "object",
      "required": [
        "acceptedCount",
        "genericDeclineCount",
        "alreadyStoredCount",
        "notWithinRadiusCount",
        "rateLimitedCount",
        "transferInProgressCount"
      ],
      "properties": {
        "acceptedCount": {
          "description": "Indicates how many peers accepted the offered content.",
          "type": "number"
        },
        "genericDeclineCount": {
          "description": "Indicates how many peers declined the offered content with no reason given.",
          "type": "number"
        },
        "alreadyStoredCount": {
          "description": "Indicates how many peers declined the offered content because they already have it stored.",
          "type": "number"
        },
        "notWithinRadiusCount": {
          "description": "Indicates how many peers declined the offered content because it is not within their radius.",
          "type": "number"
        },
        "rateLimitedCount": {
          "description": "Indicates how many peers declined the offered content due to a rate limit being reached.",
          "type": "number"
        },
        "transferInProgressCount": {
          "description": "Indicates how many peers declined the offered content due to having too many in progress transfers for the given content id.",
          "type": "number"
        }
      }
    }
  }
}
