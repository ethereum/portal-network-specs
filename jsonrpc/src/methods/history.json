[
  {
    "name": "portal_historyRoutingTableInfo",
    "summary": "Returns meta information about history network routing table.",
    "params": [],
    "result": {
      "$ref": "#/components/contentDescriptors/RoutingTableInfoResult"
    }
  },
  {
    "name": "portal_historyAddEnr",
    "summary": "Write an ethereum node record to the routing table.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/AddEnrResult"
    }
  },
  {
    "name": "portal_historyGetEnr",
    "summary": "Fetch the latest ENR associated with the given node ID",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/GetEnrResult"
    }
  },
  {
    "name": "portal_historyDeleteEnr",
    "summary": "Delete a Node ID from the routing table",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/DeleteEnrResult"
    }
  },
  {
    "name": "portal_historyLookupEnr",
    "summary": "Fetch the ENR representation associated with the given Node ID and optional sequence number",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      },
      {
        "$ref": "#/components/contentDescriptors/EnrSeq"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/LookupEnrResult"
    }
  },
  {
    "name": "portal_historySendPing",
    "summary": "Send a PING message to the specified node",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/DataRadius"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendPingResult"
    }
  },
  {
    "name": "portal_historySendPong",
    "summary": "Send a PONG message to the specified node",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/RequestId"
      },
      {
        "$ref": "#/components/contentDescriptors/DataRadius"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendPongResult"
    }
  },
  {
    "name": "portal_historySendFindNodes",
    "summary": "Send a FINDNODES request to a peer, to search within the given set of distances",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/Distances"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendFindNodeResult"
    }
  },
  {
    "name": "portal_historySendNodes",
    "summary": "Respond to a specific FINDNODES request with a NODES response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/Nodes"
      },
      {
        "$ref": "#/components/contentDescriptors/RequestId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendNodesResult"
    }
  },
  {
    "name": "portal_historySendFindContent",
    "summary": "Send FINDCONTENT message.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendFindContentResult"
    }
  },
  {
    "name": "portal_historySendContent",
    "summary": "Send CONTENT message. This message can contain either a uTP connection ID, a list of ENRs or the requested content.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ConnectionId"
      },
      {
        "$ref": "#/components/contentDescriptors/Content"
      },
      {
        "$ref": "#/components/contentDescriptors/Enrs"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendContentResult"
    }
  },
  {
    "name": "portal_historySendOffer",
    "summary": "Request message to offer a set of content_keys that this node has content available for.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKeys"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendOfferResult"
    }
  },
  {
    "name": "portal_historySendAccept",
    "summary": "Signals interest in receiving the offered data from the corresponding Offer message.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ConnectionId"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKeys"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/SendAcceptResult"
    }
  },
  {
    "name": "portal_historyPing",
    "summary": "Send a PING message to the designated node and wait for a PONG response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/DataRadius"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/PingResult"
    }
  },
  {
    "name": "portal_historyFindNodes",
    "summary": "Send a FINDNODES request for nodes that fall within the given set of distances, to the designated peer and wait for a response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/Distances"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/FindNodeResult"
    }
  },
  {
    "name": "portal_historyFindContent",
    "summary": "Send FINDCONTENT message to get the content with a content key.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/FindContentResult"
    }
  },
  {
    "name": "portal_historyOffer",
    "summary": "Send the provided content item to interested peers. Clients may choose to send to some or all peers.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentValue"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/OfferResult"
    }
  },
  {
    "name": "portal_historyRecursiveFindNodes",
    "summary": "Lookup a target node within in the network",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/RecursiveFindNodeResult"
    }
  },
  {
    "name": "portal_historyRecursiveFindContent",
    "summary": "Look up a target content key in the network",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/RecursiveFindContentResult"
    }
  },
  {
    "name": "portal_historyStore",
    "summary": "Store history content key with content data",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentValue"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/ContentResult"
    }
  },
  {
    "name": "portal_historyLocalContent",
    "summary": "Get a content from the local database",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {

      "$ref": "#/components/contentDescriptors/LocalContentResult"
    }
  }
]
