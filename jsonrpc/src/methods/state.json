[
  {
    "name": "portal_stateRoutingTableInfo",
    "summary": "Returns meta information about state network routing table.",
    "params": [],
    "result": {
      "$ref": "#/components/contentDescriptors/RoutingTableInfoResult"
    }
  },
  {
    "name": "portal_stateAddEnr",
    "summary": "Write an ethereum node record to the routing table.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/AddEnrResult"
    }
  },
  {
    "name": "portal_stateGetEnr",
    "summary": "Fetch the latest ENR associated with the given node ID",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/GetEnrResult"
    }
  },
  {
    "name": "portal_stateDeleteEnr",
    "summary": "Delete a Node ID from the routing table",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/DeleteEnrResult"
    }
  },
  {
    "name": "portal_stateLookupEnr",
    "summary": "Fetch the ENR representation associated with the given Node ID and optional sequence number",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      },
      {
        "$ref": "#/components/contentDescriptors/EnrSeq"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/LookupEnrResult"
    }
  },
  {
    "name": "portal_statePing",
    "summary": "Send a PING message to the designated node and wait for a PONG response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/DataRadius"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/PingResult"
    }
  },
  {
    "name": "portal_stateFindNodes",
    "summary": "Send a FINDNODES request for nodes that fall within the given set of distances, to the designated peer and wait for a response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/Distances"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/FindNodeResult"
    }
  },
  {
    "name": "portal_stateFindContent",
    "summary": "Send FINDCONTENT message to get the content with a content key.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/FindContentResult"
    }
  },
  {
    "name": "portal_stateOffer",
    "summary": "Send an OFFER request with given ContentKey, to the designated peer and wait for a response.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/Enr"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentValue"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/OfferResult"
    }
  },
  {
    "name": "portal_stateRecursiveFindNodes",
    "summary": "Lookup a target node within in the network",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/NodeId"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/RecursiveFindNodeResult"
    }
  },
  {
    "name": "portal_stateRecursiveFindContent",
    "summary": "Look up a target content key in the network",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/ContentResult"
    }
  },
  {
    "name": "portal_stateStore",
    "summary": "Store state content key with content data",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentValue"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/StoreResult"
    }
  },
  {
    "name": "portal_stateLocalContent",
    "summary": "Get a content from the local database",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/ContentResult"
    }
  },
  {
    "name": "portal_stateGossip",
    "summary": "Send the provided content item to interested peers. Clients may choose to send to some or all peers.",
    "params": [
      {
        "$ref": "#/components/contentDescriptors/ContentKey"
      },
      {
        "$ref": "#/components/contentDescriptors/ContentValue"
      }
    ],
    "result": {
      "$ref": "#/components/contentDescriptors/GossipResult"
    }
  }
]
